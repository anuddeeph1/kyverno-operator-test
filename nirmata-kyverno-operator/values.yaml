# Default values for nirmata-kyverno.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

profile: "prod"

cloudPlatform: ""

namespace: nirmata-system #added ns

globalLabels: {}
globalAnnotations: {}
enablePreDeleteHook: true

replicaCount: 1
envVars: []

#added
predeletehookimage: 844333597536.dkr.ecr.us-west-1.amazonaws.com/nirmata/kubectl:1.29.0

#changed
image:
  repository: 844333597536.dkr.ecr.us-west-1.amazonaws.com/nirmata/nirmata-kyverno-operator
  # Defaults to chart appVersion
  tag: v0.3.12
  pullPolicy: IfNotPresent
  pullSecrets:
    registry: 844333597536.dkr.ecr.us-west-1.amazonaws.com
    name: image-pull-secret
    create: true
    username: AWS
    password: eyJwYXlsb2FkIjoiek4xeFhRMEkzWHNsN1pHNWY3cjAvZ0VnSVJSbHVEUkZlQUtMWDVaZjhGcjlLdm95azFiMnlBODQ5TUZ3YjRId3d3aXgrTmNudUhrWGlUNi9ZUTJiNjJZeFhtd3Z0d3pPbXg1SzYwdXNPdVFQSXhMWjR5Q1F4dVpZM3R2dEhwdHNYalFTZ2JUUkh1RjdBSnhlSFRDd1FqZU5ZZW1vZ3k3L0JYOE1WbExtMmVCZEVaK2JzVUZNWGpNNXpod0xSSDY4cTRvanZnMVdvNnMzcnIxVTRIK3ArTVFjcmlnWnNIRngrRnlYZGV6UVZpVHZKbGdOSVorQWpoQVVLMzNhQ0xlTUhtSTc1TGphU0ozTXpRNmZYMEZkaEEwWjUweHNNVTgrUEJ0cUF0Si9hbEdKWGJxQ1VOZHFWUmtHOVRGVXdNWWJoYm5TQzhaaDZINGVqdE1SbTIwSnZKT24wWGdSM3k4T2tpT2wxNjRZa2pIK0JKWjJrMUtnWU5PRmVZSGlIS21qaENaenBTeDBneExyVGU3ekx0YlhPd3VLQlRXUDFUbWhsRU9UZ0hIZ0YwQTRqbFBLNGpXS0s1dTVMRG42TkN2UGZwMEZFdmQrb0hSQkc4ekRidG5TbnZTeG16SVYwcSthL1VSWThSS0FqRjBFWkRxMzVCTk9oc01keXh5Qy8ra0YxQWlqWGlrNzkzS1hvTlEwYXdXeWpObEN1cTVsVVpMNDFRT3o1V0dtVFlkdCtnMkZzNXpNMzUyTktvYldjcVl4NG9UVnBaQ0twcC9hU0VQdDhjNlJDbk1JbExzTzArejFDbjlDVjdqSjFKdGlXYzFPUE44UlRhSllyK1NqY0xFeXZOOWVqaEszamUyYWhZa2FLbG5pRkd6cWh3MkxTenhmd1VWSUhIMEdzYllrTzA2cEhzSG1OMkVhdTFMalZhVmpCQmcvTW95N1YrNUZlZktyWHdHc1hnYm8ySzFjT2VjQmtFMGtjL3dwT3VJZ1VmUXI5ZEdTL1FXMEFQRmRDQnJ4V3NEM1dwRlA4SUxkampkUHlncHhUdENzUHh1a3RqY1d2TkpXd2FMMzdBOWVpRWpiWDl2Z2FwTkNhU0h1aGYvcEpwVWs3czA4QkxVNlFhWjFCdTd4V1Jma0Q1NVJseE1wL0RkQytGNWFIMGYvNWNoeUxzSkMvdXpnSy9xdG5oUVJBQ1NaUTRFaFhxWVdUVkFBS2VKWmIrZi82MGRCWGw1MXF1SGZ1aHZ1NkVaNGdIT3dZdmN0VmRUdlZGak9GVVA3R0J0N2hHZ3pmanhlc0tVaHY1WFM1eHUyTG5NWG1CNU4xNTBPcUpEYVA0UitxVDdyb0t4bG5kUUkyWklrMFdwY3BvWEplMVNqSGs5RmxTbTRMRDZHTUIwNFBrMlA1S0N4cW92VUhxRkZCT1Ayd2t4VjIxRys2SVdYZm1pSXBkTWhxZVFCSW9OQTdFOXFSRHZuUHVudEVOREEyYXhMY21BOWxEZFdVNjlHSnF0cWtRdE1vR2xRSHVFc2NnbU1zUzNEMHN5K25Kbjd1R1BOeCtrR0Z5ZEFpOFdPMFdDWS9USVk1TmdUcFd5akdKcVU3Q3p6eFpGY1dyYU0yditqc1JodnBJRkRVZThxVUphRTRySXdKcklldTRGbUsvMDRBbEQ0b253Y1gxblRFcW1vY2xyUU93SUFjeVlrSitOU2VmdU9BKzZjd2ZyWmwyQ3NPdkc0QzVRNWIwVkRLUmkyQTRTYzZVRHU0bEt1WDl5UW5vQzRtL3Nnd2tEU2dJbFVVU2lrWW5FTHIzYW5UbGN0UFcwZ2FHc04wdzlScDVCMnFQVUduUCtkNTFmMlUxaVA2TThUVUZOZzlTV0ZyL2hoIiwiZGF0YWtleSI6IkFRRUJBSGlqRUZYR3dGMWNpcFZPYWNHOHFSbUpvVkJQYXk4TFVVdlU4UkNWVjBYb0h3QUFBSDR3ZkFZSktvWklodmNOQVFjR29HOHdiUUlCQURCb0Jna3Foa2lHOXcwQkJ3RXdIZ1lKWUlaSUFXVURCQUV1TUJFRURFNWpzZmlrRy9DVm5mNmd1UUlCRUlBN05waXV5UE5IWitpUWhJUDNVbUpoYjAyanY3dEc5S1VDQUpud3o5aDJKUUpCN1Fodm9JQ1ViSmVSdHF0aUZ1TkFxS1k2WW1EVE5QTVRmRE09IiwidmVyc2lvbiI6IjIiLCJ0eXBlIjoiREFUQV9LRVkiLCJleHBpcmF0aW9uIjoxNzI2ODkyNDU2fQ==

rbac:
  create: true
  operatorHasAdminPerms: false
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

#changed to false
enableWebhook: false
# Whether certificate management is done by "cert-manager", "operator", "other"
certManager: operator

# set to true if secret is being provided for licenseManager, and set the name under helm.licenseManager.apiSecret/helm.licenseManager.licenseSecret
apiAndLicenseSecretExists: true #changed to true

# Component configurations
kyverno:
  createCR: true
  enablePolicyExceptions: true
  replicaCount:
  cleanupJobsRegistry: ~
  config:
    create: true
    name: ~
  metricsConfig:
    create: true
    name: ""
  upgrade:
    fromV2: false
  rbac:
    create: true
    serviceAccount:
      create: true
    clusterRole:
      # -- Extra resource permissions to add in the cluster role
      extraResources: []
  admissionController:
    replicas: ~
    rbac:
      create: true
      serviceAccount:
        create: true
      clusterRole:
        # -- Extra resource permissions to add in the cluster role
        extraResources: []
      coreClusterRole:
        # -- Extra resource permissions to add in the core cluster role.
        # This was introduced to avoid breaking change in the chart but should ideally be moved in `clusterRole.extraResources`.
        # @default -- See [values.yaml](values.yaml)
        extraResources:
  templating:
    enabled: false
    image: 844333597536.dkr.ecr.us-west-1.amazonaws.com/nirmata/kubectl:1.29.0
    version: ~
  customNamespaces: false
  webhooksCleanup:
    enable: false
    enabled: false
  crds:
    install: true
    annotations: {}
  cleanupController:
    # -- Enable cleanup controller.
    enabled: true
    rbac:
      # -- Create RBAC resources
      create: true
      serviceAccount:
        create: true
      clusterRole:
        # -- Extra resource permissions to add in the cluster role
        extraResources: []
      coreClusterRole:
        # -- Extra resource permissions to add in the core cluster role.
        # This was introduced to avoid breaking change in the chart but should ideally be moved in `clusterRole.extraResources`.
        # @default -- See [values.yaml](values.yaml)
        extraResources:
  reportsController:
    # -- Enable reports controller.
    enabled: true
    rbac:
      # -- Create RBAC resources
      create: true
      serviceAccount:
        name:
      clusterRole:
        # -- Extra resource permissions to add in the cluster role
        extraResources: []
      coreClusterRole:
        # -- Extra resource permissions to add in the core cluster role.
        # This was introduced to avoid breaking change in the chart but should ideally be moved in `clusterRole.extraResources`.
        # @default -- See [values.yaml](values.yaml)
        extraResources:
  backgroundController:
    # -- Enable background controller.
    enabled: true
    rbac:
      # -- Create RBAC resources
      create: true
      serviceAccount:
        name:
      clusterRole:
        # -- Extra resource permissions to add in the cluster role
        extraResources: []
      coreClusterRole:
        # -- Extra resource permissions to add in the core cluster role.
        # This was introduced to avoid breaking change in the chart but should ideally be moved in `clusterRole.extraResources`.
        # @default -- See [values.yaml](values.yaml)
        extraResources:
  kyverno:
    customLabels: {}
  nameOverride: "kyverno"
  fullnameOverride: "kyverno"
  namespace: kyverno

  # -- Additional resources to be added to kyverno controller RBAC permissions.
  generatecontrollerExtraResources: []
  image:
    # -- Image repository
    repository: 844333597536.dkr.ecr.us-west-1.amazonaws.com
    # -- Image tag
    tag: v1.11.4-n4k.nirmata.8

  # -- Override default exclude namespaces (default kyverno, kube-system, nirmata, nirmata-system )
  excludedNamespacesForWebhook: []

  # Kyverno Helm Chart customizations other than those already in kyverno CR
  helm:
    admissionController:
      imagePullSecrets:
      - name: image-pull-secret
      initContainer:
        resources:
          limits:
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 128Mi
      container:
        resources:
          limits:
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 128Mi
    cleanupController:
      resources:
        # -- Pod resource limits
        limits:
          memory: 1Gi
        # -- Pod resource requests
        requests:
          cpu: 100m
          memory: 64Mi
    reportsController:
      resources:
        # -- Pod resource limits
        limits:
          memory: 2Gi
        # -- Pod resource requests
        requests:
          cpu: 100m
          memory: 64Mi
    backgroundController:
      image:
        registry: 844333597536.dkr.ecr.us-west-1.amazonaws.com
      resources:
        # -- Pod resource limits
        limits:
          memory: 1Gi
        # -- Pod resource requests
        requests:
          cpu: 100m
          memory: 64Mi
    features:
      generateValidatingAdmissionPolicy:
        # -- Enables the feature
        enabled: false
    policyReportsCleanup:
      enabled: false
      image:
        registry: ~
        repository: ghcr.io/nirmata/kubectl
        tag: '1.29.1'
        pullPolicy: ~
      podSecurityContext: {}
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        privileged: false
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault
    apiVersionOverride:
      podDisruptionBudget: "policy/v1"
    licenseManager:
      imageTag: 0.1.16
      secretNs: nirmata-system
      apiSecret: api-secret
      licenseSecret: kyverno-license
    webhooksCleanup:
      enabled: false
      image: 844333597536.dkr.ecr.us-west-1.amazonaws.com/nirmata/kubectl:1.29.0
    cleanupJobs:
      admissionReports:
        image: 
          repository: 844333597536.dkr.ecr.us-west-1.amazonaws.com/nirmata/kubectl
          tag: '1.29.0'
        imagePullSecrets:
        - name: image-pull-secret
      clusterAdmissionReports:
        image:
          repository: 844333597536.dkr.ecr.us-west-1.amazonaws.com/nirmata/kubectl
          tag: '1.29.0'
        imagePullSecrets:
        - name: image-pull-secret
policies:
  chartRepoUsername:
  policySets: '[]'
#  Custom Policy sets can be deployed now by specifying a list of extra custom policyset parameters (chartRepo, chartName, version etc.)
#  so that policysets need not be created manually. Below is an example addition -
#  customPolicySetCharts:
#    - chartRepo: https://nirmata.github.io/kyverno-policies
#      chartName: kubernetes-best-practice-policies
#      version: 0.2.1
#      username: user
#      passwordSecret: nirmata-system/api/Key
#      name: k8s-best-practices

awsAdapter:
  createCR: false
  namespace: kyverno-aws-adapter
  replicas: 1
  image:
    repository: ghcr.io/nirmata/kyverno-aws-adapter
    tag: v0.3.0
  rbac:
    create: false
    serviceAccount:
      name:
  roleArn:
  nameOverride: "kyverno-aws-adapter"
  fullnameOverride: "kyverno-aws-adapter"
  eksCluster:
    name:
    region:

imageScanAdapter:
  createCR: false
  namespace: image-scan-adapter
  replicas: 1
  image:
    repository: ghcr.io/nirmata/image-scan-adapter
    tag: v0.1.0
  rbac:
    create: false
    serviceAccount:
      name:
  roleArn:
  nameOverride: "image-scan-adapter"
  fullnameOverride: "image-scan-adapter"

cisAdapter:
  createCR: false
  namespace: cis-adapter
  replicas: 1
  image:
    repository: ghcr.io/nirmata/kube-bench-adapter
    tag: v0.2.1
  rbac:
    create: false
  serviceAccount:
    create: false
    name:
  nameOverride: "cis-adapter"
  fullnameOverride: "cis-adapter"
  helm:
    cronjob:
      schedule: '"@weekly"'

# Items after this are general chart parameters. Set/Modify as per need.
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
  # fsGroup: 2000

securityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
    - CAP_NET_RAW

# -- Configmap storing custom CA certificate if any
customCAConfigMap:
# -- Path containing ssl certs within the container. Used only if customCAConfigMap is used
systemCertPath: /etc/ssl/certs

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    memory: 256Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
